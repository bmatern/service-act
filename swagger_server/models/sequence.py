# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Sequence(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, sequence: List[str]=None, version: str=None):
        """
        Sequence - a model defined in Swagger

        :param sequence: The sequence of this Sequence.
        :type sequence: List[str]
        :param version: The version of this Sequence.
        :type version: str
        """
        self.swagger_types = {
            'sequence': List[str],
            'version': str
        }

        self.attribute_map = {
            'sequence': 'sequence',
            'version': 'version'
        }

        self._sequence = sequence
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'Sequence':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sequence of this Sequence.
        :rtype: Sequence
        """
        return deserialize_model(dikt, cls)

    @property
    def sequence(self) -> List[str]:
        """
        Gets the sequence of this Sequence.

        :return: The sequence of this Sequence.
        :rtype: List[str]
        """
        return self._sequence

    @sequence.setter
    def sequence(self, sequence: List[str]):
        """
        Sets the sequence of this Sequence.

        :param sequence: The sequence of this Sequence.
        :type sequence: List[str]
        """

        self._sequence = sequence

    @property
    def version(self) -> str:
        """
        Gets the version of this Sequence.

        :return: The version of this Sequence.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """
        Sets the version of this Sequence.

        :param version: The version of this Sequence.
        :type version: str
        """

        self._version = version

